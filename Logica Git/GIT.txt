git init
git config --global user.name “Nombre”
git config --global user.email “correo”
git config --global color.ui true
git config --global list

git status    (muestra los archivos que están agregados)
git add . (agrega todos los cambios)
git add “nombre archivo”
git add -A (agrega último cambio)
git commit -m “texto de guardado justificado”
git commit --amend -m “cambio de nombre commit”
git log  (ver commits creados)
git checkout  (+ código del commit, +rama )(Se posiciona en un commit o en una rama)
git checkout  master (viajar ultimo commit)
git branch (+nombre rama (crea rama) )
git branch -a (muestra ramas ocultas)
git branch -D (nombre(elimina rama))
git checkout -b (nombre de rama (crea y mueve))

git checkout merge (posicionada en la rama a la que se va a sumar, mescla ramas)


git clone (+ direccion (clona proyecto al pc))
git remote add origin (+https://github.com/elnapol/TimeToWater-Master.git (vincula proyectos))
git remote -v (muestra acciones)
git remote remove origin (remueve conexión)

git push origin master (subir a github (master se puede cambiar por ramas))

git push origin master -f (fuerza cambios como el cambio de nombre de commit)
git tag –a v1.0 –m “mensaje” (marca versiones en “commits”)
git tag v1.0 (guarda versión sin commit)
git tag –a v1.0 –m “mensaje” (marca versiones “commits versionados”)
git tag –a v1.0 –m “mensaje” (+código commit) (marca versiones en un commit)
git push origin v0.1 (subir versión)
git push origin –tags (sube todos los tags)

SSH
En Bash ssh-keygen (posicionarse en home, pide clave y confirmar puede ser enter)
buscar archivos ocultos “ls –rf”
entrar a .ssh  “cd .ssh”
entrar a llave publica id_rsa.pub
car id_rsa.pub da llave ssh key para GitHub
se agrega a settings -> llave ssh
git remote add origin “conexión ssh de git”


